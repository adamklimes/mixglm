% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mixglm.R
\name{mixglm}
\alias{mixglm}
\title{Fit the mixture model}
\usage{
mixglm(
  stateValModels,
  stateProbModels,
  statePrecModels,
  inputData,
  numStates = NULL,
  stateValError = gaussian,
  mcmcIters = 10000,
  mcmcBurnin = 5000,
  mcmcChains = 4,
  mcmcThin = 1,
  setPriors = list(stateVal = list(int1 = "dnorm(0.0, 0.001)", int2 = "dgamma(1.0, 0.5)",
    pred = "dnorm(0.0, 0.001)"), stateProb = list(int2 = "dnorm(0.0, 0.001)", pred =
    "dnorm(0.0, 0.001)"), statePrec = list(int = "dnorm(0.0, 0.001)", pred =
    "dnorm(0.0, 0.001)")),
  setInit = NULL,
  setSeed = FALSE,
  verbose = TRUE
)
}
\arguments{
\item{stateValModels}{A formula describing the regression relationship between the mean
of the response variable and the covariates for all mixture components, or a list of formulas
with each element giving the regression relationship between the mean
of the response variable and the covariates for each mixture component (ordered according to intercept of the
mixture component on the y-axis).  The response variable must be given on the
left-hand side of the formula.}

\item{stateProbModels}{A formula describing the regression relationship between the probability
of the existence of mixture components and the covariates, or a list
of formulas with each element giving the regression relationship between the probability
of the existence of a mixture component and its covariates (ordered
according to intercept of the mixture component on the y-axis).}

\item{statePrecModels}{A formula describing the regression relationship between the variances
in the mixture components and the covariates, or a list of
formulas with each mixture component giving the regression relationship between the variance in the
mixture component and the covariates for each mixture component (ordered according to
intercept of the mixture component on the y-axis).}

\item{inputData}{A data frame containing the covariate information and the response
variable.}

\item{numStates}{An integer scalar containing the number of components in the mixture.
If any of the \code{stateValModels}, \code{stateProbModels}, or \code{statePrecModels} parameters
is a list then \code{numStates} can be omitted and is therefore set to the length of the
list.}

\item{stateValError}{A description of the error distribution and link function to be used
in the mixture model.  This can be from the \link[stats]{family}
specification or \code{character} scalar with the following possible values: \code{"gaussian"},
\code{"gamma"}, \code{"beta"}, or \code{"negbinomial"}.}

\item{mcmcIters}{An integer scalar providing the number of post-burn-in samples to draw from the
MCMC sampler (per chain).}

\item{mcmcBurnin}{An integer scalar providing the number of MCMC samples to use for the
adaption or burn-in portion of the process (per chain).}

\item{mcmcChains}{An integer scalar giving the number of MCMC chains to use.}

\item{mcmcThin}{An integer scalar giving the thinning frequency in the MCMC chains.  For example,
a value of \code{4} results in every fourth values being retained.}

\item{setPriors}{A named list of prior distributions. Distribution are specified using character
strings. If sublists are not provided, values from the list are distributed to all sublist items
allowing to specify several priors at once. Sublist items are \code{"int"}, for specification of
priors on intercept parameters, and \code{"pred"}, from specification of priors on predictor
parameters. \code{"int"} is followed by \code{"1"} or \code{"2"} marking priors for the first
intercept and all the other intercepts respectively. For full structure of the list see default
values. Prior \code{"stateVal$Int2"} should allow only positive values to ensure distinctness of
mixture components.}

\item{setInit}{list of initial values which overwrites generated ones.}

\item{setSeed}{logical or numeric argument passed to \link[nimble]{runMCMC}. If \code{"TRUE"} or
numeric, R's random number seed is set at the onset of each MCMC chain.}

\item{verbose}{A logical value specifying if NIMBLE messages should be printed.}
}
\value{
A list containing the following components:
\item{\code{mcmcSamples}}{ An \link[coda]{mcmc} object if \code{mcmcChains == 1} or \link[coda]{mcmc.list}
object if \code{mcmcChains > 1} containing the sampled values}
\item{\code{compiledModel}}{ An R interface object containing an interface for the compiled NIMBLE model.
This is the same output as the \link[nimble]{compileNimble} function applied to the model object}
\item{\code{modelText}}{ A character scalar containing the text of the model specification in
the NIMBLE BUGS dialect}
\item{\code{modelCode}}{ A \code{nimbleCode} object containing the model specification}
\item{\code{constants}}{ A list containing the constants provided to NIMBLE}
\item{\code{data}}{ A list containing the data provided to NIMBLE}
\item{\code{errorModel}}{ A factor containing the error model used for the specification of
the error distribution for the response variable}
\item{\code{linkFunction}}{ A factor containing the link function used in the specification
of the mixture model}
\item{\code{initialValues}}{ A list containing potential initial values used for each of the stochastic
nodes in the NIMBLE model specification}
}
\description{
This function takes a set of model specifications for the three sub-models
of the mixture model and fits them to a data set.
}
\examples{
\dontrun{
set.seed(10)
n <- 200
x <- rnorm(n)
group <- rbinom(n, 1, 0.5)
y <- rnorm(n, 1 + 0.5 * x * c(-1, 1)[group + 1], 0.1)
plot(y ~ x)
dat <- data.frame(x, y)

mod <- mixglm(
  stateValModels = y ~ x,
  stateProbModels = ~ x,
  statePrecModels = ~ x,
  inputData = dat,
  numStates = 2)
plot(mod)}
}
\author{
Joseph D. Chipperfield \email{joechip90@googlemail.com}, Adam Klimes
}
